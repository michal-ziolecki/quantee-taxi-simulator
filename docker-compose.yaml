volumes:
  quantee_data:
    name: quantee_data_volume

networks:
  quantee_network:
    name: quantee_network

services:
  dispatcher:
    container_name: dispatcher
    image: dispatcher-img
    build:
      context: .
      dockerfile: dispatcher/Dockerfile
    env_file:
      - .env
#    environment:
#      no_proxy: ${NO_PROXY}
    volumes:
      - ./dispatcher:/dispatcher
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health-check" ]
      interval: 60s
      timeout: 3s
      retries: 5
    restart: always
    networks:
      - quantee_network

  db:
    image: postgres:15.0
    container_name: dispatcher_db
    restart: always
    volumes:
      - quantee_data:/var/lib/postgresql/data
#      - ./dispatcher/db-data:/var/lib/postgresql/data  # use this line to persist data in local folder
    environment:
      POSTGRES_DB: "dispatcher_db"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    ports:
      - "5432:5432"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-q", "-d", "dispatcher_db", "-U", "postgres"]
      timeout: 45s
      interval: 1s
      retries: 45
    networks:
      - quantee_network

  taxi-001:
    container_name: taxi-001
    image: taxi-img
    build:
      context: .
      dockerfile: taxi_simulator/Dockerfile
    env_file:
      - .env
    volumes:
      - ./taxi_simulator:/taxi_simulator
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      dispatcher:
        condition: service_healthy
    restart: always
    networks:
      - quantee_network
#    entrypoint: ["python", "start.py", "--dispatcher-url", "http://dispatcher:8080", "--network-id", "taxi-001"]
#    command: ["--dispatcher-url", "http://dispatcher:8080", "--network-id", "taxi-001"]

  taxi-002:
    container_name: taxi-002
    image: taxi-img
    build:
      context: .
      dockerfile: taxi_simulator/Dockerfile
    env_file:
      - .env
    volumes:
      - ./taxi_simulator:/taxi_simulator
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      dispatcher:
        condition: service_healthy
    restart: always
    networks:
      - quantee_network
#    entrypoint: ["python", "start.py", "--dispatcher-url", "http://dispatcher:8080", "--network-id", "taxi-002"]
    command: ["--dispatcher-url", "http://dispatcher:8080", "--network-id", "taxi-002"]